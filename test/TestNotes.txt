//Testing script!!
(refresh)
(require '[clojure.zip :as zip])
(init-permanent-matrix 3)
(set-permanent-val [0 2] "x")
(set-permanent-val [1 2] "y")
(set-permanent-val [0 1] "x")
(def bloc (ab/run-alpha-beta-loc (get-game-board)))

//Here is the problem - BELOW - Beta is only getting set by first child, needs to be set by set and passed on in other children. 
{:matrix [{:spot1 y, :spot2 0, :spot3 0} {:spot1 x, :spot2 0, :spot3 0} {:spot1 x, :spot2 y, :spot3 0}], :matrixpoint [0 0], :id tic853599, :parent nil, :score 0, :depth 0, :inputs ({:beta Infinity, :parent tic853599, :matrixpoint [1 0], :minmax nil, :matrix [{:spot1 y, :spot2 x, :spot3 0} {:spot1 x, :spot2 0, :spot3 0} {:spot1 x, :spot2 y, :spot3 0}], :score 0, :alpha -5, :depth 1} {:beta Infinity, :parent tic853599, :matrixpoint [1 1], :minmax nil, :matrix [{:spot1 y, :spot2 0, :spot3 0} {:spot1 x, :spot2 x, :spot3 0} {:spot1 x, :spot2 y, :spot3 0}], :score 0, :alpha -7, :depth 1} {:beta Infinity, :parent tic853599, :matrixpoint [2 0], :minmax nil, :matrix [{:spot1 y, :spot2 0, :spot3 x} {:spot1 x, :spot2 0, :spot3 0} {:spot1 x, :spot2 y, :spot3 0}], :score 0, :alpha 6, :depth 1} {:beta Infinity, :parent tic853599, :matrixpoint [2 1], :minmax nil, :matrix [{:spot1 y, :spot2 0, :spot3 0} {:spot1 x, :spot2 0, :spot3 x} {:spot1 x, :spot2 y, :spot3 0}], :score 0, :alpha 6, :depth 1} {:beta Infinity, :parent tic853599, :matrixpoint [2 2], :minmax nil, :matrix [{:spot1 y, :spot2 0, :spot3 0} {:spot1 x, :spot2 0, :spot3 0} {:spot1 x, :spot2 y, :spot3 x}], :score 0, :alpha 0, :depth 1}), :beta 0}